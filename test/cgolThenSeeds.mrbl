
frameRate
	10
videoWidth
	256
videoHeight
	256
windowWidth
	768
windowHeight
	768


var liveColor B4
	B4from01  0.22  0.92  0.44  1.0
var deadColor B4
	B4from01  0.08  0.22  0.55  1.0

fn initialCellFiller N1
	x N1
	y N1
	w N1
	h N1
	either (% x 2) (% y 2)

var initialCells N1D2
	mapInN1D2
		initialCellFiller
		N4
			* 3 (/ videoWidth  8)
			* 3 (/ videoHeight 8)
			/ videoWidth  4
			/ videoHeight 4
		buildN1D2 videoWidth videoHeight


fn neighborCount N1
	x N1
	y N1
	s N1D2
	add8
		fromN1D2 (- x 1) (- y 1) s
		fromN1D2    x    (- y 1) s
		fromN1D2 (+ x 1) (- y 1) s
		fromN1D2 (- x 1) (+ y 1) s
		fromN1D2    x    (+ y 1) s
		fromN1D2 (+ x 1) (+ y 1) s
		fromN1D2 (- x 1)    y    s
		fromN1D2 (+ x 1)    y    s

fn cgol N1
	x N1
	y N1
	w N1
	h N1
	s N1D2
	?
		fromN1D2 x y s
		?
			either
				> 2 (neighborCount x y s)
				< 3 (neighborCount x y s)
			0
			1
		?
			= 3 (neighborCount x y s)
			1
			0

fn seeds N1
	x N1
	y N1
	w N1
	h N1
	s N1D2
	?
		= 2 (neighborCount x y s)
		1
		0


@enter

state cells N1D2
	?
		currentFrame
		mapThruN1D2
			seeds
			mapThruN1D2
				cgol
				cells
		initialCells


fn cellsToVideo B4
	x N1
	y N1
	w N1
	h N1
	?
		fromN1D2 x y cells
		liveColor
		deadColor


videoOut
	mapB4D2
		cellsToVideo
		buildB4D2 videoWidth videoHeight

next
	? (< currentFrame 1000) enter exit



