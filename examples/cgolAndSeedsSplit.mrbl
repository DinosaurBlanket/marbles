

videoWidth
	256
videoHeight
	256
windowWidth
	768
windowHeight
	768


fn liveColorA B4
	B4from01  0.22  0.92  0.44  1.0
fn liveColorB B4
	B4from01  0.92  0.22  0.44  1.0

var deadColor B4
	B4from01  0.08  0.22  0.55  1.0

fn initialCellFiller N1
	x N1
	y N1
	w N1
	h N1
	> 4 (% x 8)

var initialCells N1D2
	mapInN1D2
		initialCellFiller
		N4
			/ videoWidth  4
			/ videoHeight 4
			/ videoWidth  2
			/ videoHeight 2
		buildN1D2 videoWidth videoHeight

fn splitCond N1
	x N1
	y N1
	w N1
	h N1
	> 14 (% y 16)

@enter

fn neighborCount N1
	x N1
	y N1
	add8
		fromN1D2 (- x 1) (- y 1) cells
		fromN1D2    x    (- y 1) cells
		fromN1D2 (+ x 1) (- y 1) cells
		fromN1D2 (- x 1) (+ y 1) cells
		fromN1D2    x    (+ y 1) cells
		fromN1D2 (+ x 1) (+ y 1) cells
		fromN1D2 (- x 1)    y    cells
		fromN1D2 (+ x 1)    y    cells

fn cgol N1
	x N1
	y N1
	w N1
	h N1
	?
		fromN1D2 x y cells
		?
			either
				> 2 (neighborCount x y)
				< 3 (neighborCount x y)
			0
			1
		?
			= 3 (neighborCount x y)
			1
			0


fn seeds N1
	x N1
	y N1
	w N1
	h N1
	?
		= 2 (neighborCount x y)
		1
		0

fn cellFlipper N1
	x N1
	y N1
	w N1
	h N1
	?
		splitCond x y w h
		cgol  x y w h
		seeds x y w h

state cells N1D2
	?
		currentFrame
		mapN1D2 cellFlipper cells
		initialCells


fn cellsToVideo B4
	x N1
	y N1
	w N1
	h N1
	?
		fromN1D2 x y cells
		?
			splitCond x y w h
			liveColorA
			liveColorB
		deadColor


videoOut
	mapB4D2
		cellsToVideo
		buildB4D2
			videoWidth
			videoHeight

